name: Build
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**/docs'
      - 'mkdocs.yaml'


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      id-token: write
      packages: write
      # release please needs write for contents and pr
      contents: write
      pull-requests: write
    steps:
      - name: Dump context for debugging
        if: ${{ true }}
        run: |
          echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump JWT for debugging
        if: ${{ false }}
        run: |
          IDTOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com"|jq -r ".|.value")
          # echo $IDTOKEN
          dump() {
              if [[ -x $(command -v jq) ]]; then
                  jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                  echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
              fi
          }
          dump $IDTOKEN

      # This will possibly 
      #  a) update the pending release PR; or 
      #  b) (if this commit is from merging the pending release PR) create a release tag and release 
      #
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: release-please-action
          skip-github-release: false
          default-branch: main

      # TODO: add "main" tag
      #       add build-tag.yaml
      #       
      - name: Checkout code from tag
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.release.outputs.tag_name }}

      - name: Checkout code from workflow
        if: ${{ ! steps.release.outputs.release_created }}
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies with audit
        run: |
          npm ci
          npm audit check --omit=dev --audit-level=high
          npm run lint
          npm run build

      - name: Run tests
        run: npm run test

      - name: Build and push docker
        uses: ./.github/actions/docker-build
        with:
          labels: |
            org.opencontainers.image.title=Otel Demo
            org.opencontainers.image.description=Nest.Js with OTEL and other random experimentation
          github-token: ${{ secrets.GITHUB_TOKEN }}
          context: ${{ steps.release.outputs.release_created && 'git' || 'workflow' }}
        env:
          DOCKER_BUILDKIT: 1
