---
name: Build and Push 
description: Build and Push docker images to GHCR
inputs:
  labels: 
    description: labels (string of name-value pairs)
    # default: |
    #   org.opencontainers.image.title=My Title
    #   org.opencontainers.image.description=My description
    required: false 
runs:
  using: composite
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        # Make short SHAs
        GITHUB_SHA_SHORT=${GITHUB_SHA:0:7}
        GITHUB_PR_SHA_SHORT=${GITHUB_PR_SHA:0:7}

        # Print
        echo "GITHUB_REF=$GITHUB_REF"
        echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT"
        echo "GITHUB_PR_SHA_SHORT=$GITHUB_PR_SHA_SHORT"

        # For a non-monorepo the image id is the docker base repo
        # For a monorepo we can use $REPO_GHCR/$PROJECT:<tag>

        # Export
        echo "GITHUB_REF=$GITHUB_REF" >> $GITHUB_ENV
        echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT" >> $GITHUB_ENV
        echo "GITHUB_PR_SHA_SHORT=$GITHUB_PR_SHA_SHORT" >> $GITHUB_ENV
        echo "GHCR_IMAGE=${GHCR_IMAGE_MIXED,,}" >> $GITHUB_ENV

      env:
        # Above we conert mixed case to lowercase using ${VAR,,}
        GHCR_IMAGE_MIXED: ${{ env.REPO_GHCR }}/${{ github.repository }}
        GITHUB_PR_SHA: ${{ github.event.pull_request.head.sha }}
        # Use pr head ref for pr, othewise use ref
        GITHUB_REF: ${{ github.head_ref || github.ref }}

    #
    # Define tags based on workflow event
    #
    # push semver tag (refs/tags/v1.2.3)
    #  - v1.2.3
    #  - v1.2
    #  - latest
    #
    # push non-semver tag:
    #  - TAGNAME
    #
    # push:
    #  - REFNAME (everything after refs/heads, e.g. main)
    #
    # pull request (refs/pull):
    #  - pr-PRNUM (mutable latest)
    #  - pr-PRNUM-PR_SHA_SHORT (PR commit)
    #
    # all:
    #  - sha-BUILD_SHA_SHORT (commit that triggered workflow and used for build)
    #
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.GHCR_IMAGE }}
        labels: ${{ inputs.labels }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=pr,suffix=-${{ env.GITHUB_PR_SHA_SHORT }}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,format=short,prefix=sha-

    - name: Show docker meta
      shell: bash
      run: |
        echo -e "tags:\n${{ steps.meta.outputs.tags }}"
        echo -e "labels:\n${{ steps.meta.outputs.labels }}"

    - name: Set up QEMU for docker build push action
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        # docker image build . --file docker/Dockerfile
        context: .
        # Uncomment to support arm64 as well
        # platforms: linux/amd64,linux/arm64
        file: docker/Dockerfile
        # Push when: a) commit to target; b) PR labeled "preview"
        push: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'preview') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


    